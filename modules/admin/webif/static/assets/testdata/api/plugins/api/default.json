[
  "tankerkoenig.get_petrol_station_detail(id:str)",
  "tankerkoenig.get_petrol_station_prices(ids:list(str))",
  "tankerkoenig.get_petrol_stations(lat:float, lon:float, type:str, sort:str, rad:float)",
  "traffic.get_route_info(origin:str, destination:str, alternatives:bool, departure_time:str, mode:str)",
  "nw.udp(host:str, port:int, data:foo)",
  "odlinfo.get_radiation_data_for_id(odlinfo_id:str)",
  "odlinfo.get_radiation_data_for_ids(odlinfo_ids:list(str))",
  "knx.encode(data:foo, dpt:foo)",
  "knx.groupread(ga:knx_ga, cache:bool=False)",
  "knx.groupwrite(ga:knx_ga, data:foo, dpt:str)",
  "knx.send_time(time_ga:knx_ga, date_ga:knx_ga)",
  "visu.url(url:str, clientip:str= '')",
  "mail.send(to:str, subject:foo, message:foo)",
  "database.cleanup()",
  "database.db()",
  "database.deleteItem(id:int)",
  "database.deleteLog(id:int, time:int, time_start:int, time_end:int, changed:int, changed_start:int, changed_end:int, cur:foo)",
  "database.dump(dumpfile:str, id:int, time:int, time_start:int, time_end:int, changed:int, changed_start:int, changed_end:int, cur:foo)",
  "database.id(item:foo)",
  "database.insertItem(name:str, cur:foo)",
  "database.insertLog(id:int, time:int, duration:int, val:str, it:str, changed:int, cur:foo)",
  "database.readItem(id:int, cur:foo)",
  "database.readItems(id:int, cur:foo)",
  "database.readLog(id:int, time:int)",
  "database.readLogs(id:int, time:int, time_start:int, time_end:int, changed:int, changed_start:int, changed_end:int, cur:foo)",
  "database.updateItem(id:int, time:int, duration:int, val:str, it:str, changed:int, cur:foo)",
  "database.updateLog(id:int, time:int, duration:int, val:str, it:str, changed:int, cur:foo)",
  "fritzbox_7490.cancel_call()",
  "fritzbox_7490.get_call_origin()",
  "fritzbox_7490.get_calllist(filter_incoming:str)",
  "fritzbox_7490.get_contact_name_by_phone_number(phone_number:str)",
  "fritzbox_7490.get_host_details(index:int)",
  "fritzbox_7490.get_hosts(only_active:bool)",
  "fritzbox_7490.get_phone_name(index:int)",
  "fritzbox_7490.get_phone_numbers_by_name(name:str)",
  "fritzbox_7490.is_host_active(mac_address:mac)",
  "fritzbox_7490.map_icon(icon:str)",
  "fritzbox_7490.reboot()",
  "fritzbox_7490.reconnect()",
  "fritzbox_7490.set_call_origin(phone_name:mac)",
  "fritzbox_7490.start_call(phone_number:str)",
  "fritzbox_7490.wol(mac_address:mac)",
  "fritzbox_7590.cancel_call()",
  "fritzbox_7590.get_call_origin()",
  "fritzbox_7590.get_calllist(filter_incoming:str)",
  "fritzbox_7590.get_contact_name_by_phone_number(phone_number:str)",
  "fritzbox_7590.get_host_details(index:int)",
  "fritzbox_7590.get_hosts(only_active:bool)",
  "fritzbox_7590.get_phone_name(index:int)",
  "fritzbox_7590.get_phone_numbers_by_name(name:str)",
  "fritzbox_7590.is_host_active(mac_address:mac)",
  "fritzbox_7590.map_icon(icon:str)",
  "fritzbox_7590.reboot()",
  "fritzbox_7590.reconnect()",
  "fritzbox_7590.set_call_origin(phone_name:mac)",
  "fritzbox_7590.start_call(phone_number:str)",
  "fritzbox_7590.wol(mac_address:mac)",
  "wlan_repeater_1750_garage.cancel_call()",
  "wlan_repeater_1750_garage.get_call_origin()",
  "wlan_repeater_1750_garage.get_calllist(filter_incoming:str)",
  "wlan_repeater_1750_garage.get_contact_name_by_phone_number(phone_number:str)",
  "wlan_repeater_1750_garage.get_host_details(index:int)",
  "wlan_repeater_1750_garage.get_hosts(only_active:bool)",
  "wlan_repeater_1750_garage.get_phone_name(index:int)",
  "wlan_repeater_1750_garage.get_phone_numbers_by_name(name:str)",
  "wlan_repeater_1750_garage.is_host_active(mac_address:mac)",
  "wlan_repeater_1750_garage.map_icon(icon:str)",
  "wlan_repeater_1750_garage.reboot()",
  "wlan_repeater_1750_garage.reconnect()",
  "wlan_repeater_1750_garage.set_call_origin(phone_name:mac)",
  "wlan_repeater_1750_garage.start_call(phone_number:str)",
  "wlan_repeater_1750_garage.wol(mac_address:mac)",
  "wlan_repeater_1750_galerie.cancel_call()",
  "wlan_repeater_1750_galerie.get_call_origin()",
  "wlan_repeater_1750_galerie.get_calllist(filter_incoming:str)",
  "wlan_repeater_1750_galerie.get_contact_name_by_phone_number(phone_number:str)",
  "wlan_repeater_1750_galerie.get_host_details(index:int)",
  "wlan_repeater_1750_galerie.get_hosts(only_active:bool)",
  "wlan_repeater_1750_galerie.get_phone_name(index:int)",
  "wlan_repeater_1750_galerie.get_phone_numbers_by_name(name:str)",
  "wlan_repeater_1750_galerie.is_host_active(mac_address:mac)",
  "wlan_repeater_1750_galerie.map_icon(icon:str)",
  "wlan_repeater_1750_galerie.reboot()",
  "wlan_repeater_1750_galerie.reconnect()",
  "wlan_repeater_1750_galerie.set_call_origin(phone_name:mac)",
  "wlan_repeater_1750_galerie.start_call(phone_number:str)",
  "wlan_repeater_1750_galerie.wol(mac_address:mac)",
  "vusolo4k.get_answer()",
  "vusolo4k.get_audio_tracks()",
  "vusolo4k.send_message(messagetext:str, messagetype:int=1, timeout:int=10)",
  "vusolo4k.set_power_state(value:int)",
  "vusolo2.get_answer()",
  "vusolo2.get_audio_tracks()",
  "vusolo2.send_message(messagetext:str, messagetype:int=1, timeout:int=10)",
  "vusolo2.set_power_state(value:int)",
  "pushbullet.address(name:str, address:str, deviceid:str, apikey:str)",
  "pushbullet.file(filepath:str, deviceid:str, apikey:str, body:str)",
  "pushbullet.link(title:str, url:str, deviceid:str, apikey:str, body:str)",
  "pushbullet.list(title:str, items:str, deviceid:str, apikey:str)",
  "pushbullet.note(title:str, body:str, deviceid:str, apikey:str)",
  "mvg_live.get_station_departures(station:str, timeoffset:int, entries:int, ubahn:bool, tram:bool, bus:bool, sbahn:bool)",
  "darksky.map_icon(icon:str)",
  "join.send(title:str= 'None', text:str= 'None', icon:str= 'None', find:str= 'None', smallicon:str= 'None', device_id:str= 'None', device_ids:str= 'None', device_name:str= 'None', url:str= 'None', image:str= 'None', sound:str= 'None', group:str= 'None', clipboard:str= 'None', file:str= 'None', callnumber:str= 'None', smsnumber:str= 'None', smstext:str= 'None', mmsfile:str= 'None', wallpaper:str= 'None', lockwallpaper:str= 'None', interruptionFilter:str= 'None', mediaVolume:str= 'None', ringVolume:str= 'None', alarmVolume:str= 'None')"
]
